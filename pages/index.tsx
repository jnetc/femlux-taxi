import type { NextPage, GetStaticProps, InferGetStaticPropsType } from 'next';
import Head from 'next/head';
// import { request, query } from 'lib/datocms';

// Context
// import { ContentStore } from '@Store/contentStore';
// Hooks
import { LanguageState, useLanguageState } from '@Hooks/useLanguageState';
import { useLangSwitcher } from '@Hooks/useLangSwitcher';
// Components
import Navigation from '@Components/navigation';
import SectionHome from '@Components/section-home';
import { extraCSS } from '@Helpers/critical';

// interface Intro<T> {
//   title: T;
//   subtitle: T;
//   id: T;
// }
interface Navigation<T> {
  navigation: Array<{ link: T }>;
}
// interface Data {
//   intro: Intro<string>;
//   nav: Navigation<string>;
// }

const Home: NextPage = ({
  lang,
}: InferGetStaticPropsType<typeof getStaticProps>) => {
  const { switchLang, languages, switchLanguages } = useLanguageState();
  const [langs] = useLangSwitcher(lang, languages);

  return (
    <LanguageState.Provider
      value={{
        language: lang,
        languages: langs,
        switchLang,
        switchLanguages,
      }}
    >
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <style dangerouslySetInnerHTML={{ __html: extraCSS }} />
      </Head>

      <Navigation />
      <main>
        <SectionHome />
      </main>
      <footer>Footer</footer>
    </LanguageState.Provider>
  );
};

export default Home;

export const getStaticProps: GetStaticProps = async context => {
  console.log(context);

  // const data = await request({ query, variables: { locale: context.locale } });
  const data = null;
  console.log('__DATOCMS', data);

  return {
    props: { data, lang: context.locale },
  };
};
